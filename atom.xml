<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Josh's Blog]]></title>
  <link href="http://Winstar.github.io/atom.xml" rel="self"/>
  <link href="http://Winstar.github.io/"/>
  <updated>2013-10-28T16:01:11+08:00</updated>
  <id>http://Winstar.github.io/</id>
  <author>
    <name><![CDATA[Josh Wang]]></name>
    <email><![CDATA[winstar53@hotmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mac 10.9 Mavericks下使用mod_jk]]></title>
    <link href="http://Winstar.github.io/blog/2013/10/28/mac-10-dot-9-mavericksxia-shi-yong-mod-jk/"/>
    <updated>2013-10-28T15:32:00+08:00</updated>
    <id>http://Winstar.github.io/blog/2013/10/28/mac-10-dot-9-mavericksxia-shi-yong-mod-jk</id>
    <content type="html"><![CDATA[<p>mac os更新到10.9后，之前正常使用的apche+tomcat环境不能正常运作，mod_jk.so异常，需要对其进行重新编译。</p>

<!--more-->


<h2>安装Xcode</h2>

<p>完成Xcode 5.0的安装，然后执行:
xcode-select &mdash;install, 安装command tools</p>

<h2>创建链接</h2>

<p>默认链接和系统有些不一样</p>

<p><code>sudo ln -s /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain /Applications/Xcode.app/Contents/Developer/Toolchains/OSX10.9.xctoolchai</code></p>

<h2>下载源码</h2>

<p><a href="http://mirror.bit.edu.cn/apache//tomcat/tomcat-connectors/jk/tomcat-connectors-1.2.37-src.tar.gz">http://mirror.bit.edu.cn/apache//tomcat/tomcat-connectors/jk/tomcat-connectors-1.2.37-src.tar.gz</a></p>

<h2>更改代码</h2>

<p>找到/native/common/jk_map.c，由于strcpy机制变了，需要将其替换</p>

<p><code>strcpy(buf, rc)</code>
替换为
<code>memmove(buf, rc, len + 1)</code></p>

<h2>编译</h2>

<p>进入native目录，分别执行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>./configure CFLAGS=&#39;-arch x86_64&#39; APXSLDFLAGS=&#39;-arch x86_64&#39; --with-apxs=/usr/sbin/apxs
</span><span class='line'>make
</span><span class='line'>sudo make install
</span></code></pre></td></tr></table></div></figure>


<p>此时mod_jk.so文件已在/usr/libexec/apache2/mod_jk.so默认目录</p>

<p>参考:
<a href="https://gist.github.com/jclausen/7121183">https://gist.github.com/jclausen/7121183</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[maven compile 自定义]]></title>
    <link href="http://Winstar.github.io/blog/2013/10/20/maven-compile-zi-ding-yi/"/>
    <updated>2013-10-20T14:51:00+08:00</updated>
    <id>http://Winstar.github.io/blog/2013/10/20/maven-compile-zi-ding-yi</id>
    <content type="html"><![CDATA[<p>使用maven已经好长一段时间了，部署项目一向有打包这一步。在新公司，之前的项目都是使用ant编译的，然后使用resin+apache运行，这个过程不需要用到mvn package。当前你也可以先打包再手动解压，之前我也是这么做的，下面说说另一种方法，我们只执行mvn compile就完成一个可部署的web目录。</p>

<!--more-->


<h2>路径变更</h2>

<p>主要将src/main/webapp移至根目录的web，之后class文件和资源都会拷贝到这里作为部署目录。
我这里的conf文件夹是一些需要配置的文件。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;build&gt;</span>
</span><span class='line'>  <span class="nt">&lt;finalName&gt;</span>……<span class="nt">&lt;/finalName&gt;</span>
</span><span class='line'>  <span class="nt">&lt;sourceDirectory&gt;</span>src/main/java<span class="nt">&lt;/sourceDirectory&gt;</span>
</span><span class='line'>  <span class="nt">&lt;resources&gt;</span>
</span><span class='line'>      <span class="nt">&lt;resource&gt;</span>
</span><span class='line'>          <span class="nt">&lt;directory&gt;</span>src/main/resources<span class="nt">&lt;/directory&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/resource&gt;</span>
</span><span class='line'>      <span class="nt">&lt;resource&gt;</span>
</span><span class='line'>          <span class="nt">&lt;directory&gt;</span>conf<span class="nt">&lt;/directory&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/resource&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/resources&gt;</span>
</span><span class='line'>  <span class="nt">&lt;outputDirectory&gt;</span>web/WEB-INF/classes<span class="nt">&lt;/outputDirectory&gt;</span>
</span><span class='line'>  <span class="nt">&lt;testOutputDirectory&gt;</span>web/WEB-INF/classes<span class="nt">&lt;/testOutputDirectory&gt;</span>
</span><span class='line'>  <span class="nt">&lt;plugins&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/plugins&gt;</span>
</span><span class='line'><span class="nt">&lt;/build&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Dependency</h2>

<p>默认的依赖项拷贝过程是在package阶段执行的，但通过下面的配置，在执行mvn compile阶段就能拷贝了，主要依赖<code>&lt;phase&gt;compile&lt;/phase&gt;</code>,将copy-dependencies过程依附再compile阶段。lib的拷贝路径可通过<code>&lt;outputDirectory&gt;lib&lt;/outputDirectory&gt;</code>，一般放在WEB-INF下，这里我把它放在根目录，因为resin可以指定lib路径的。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>org.apache.maven.plugins<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>maven-dependency-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>2.8<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;executions&gt;</span>
</span><span class='line'>      <span class="nt">&lt;execution&gt;</span>
</span><span class='line'>          <span class="nt">&lt;id&gt;</span>copy-dependencies<span class="nt">&lt;/id&gt;</span>
</span><span class='line'>          <span class="nt">&lt;phase&gt;</span>compile<span class="nt">&lt;/phase&gt;</span>
</span><span class='line'>          <span class="nt">&lt;goals&gt;</span>
</span><span class='line'>              <span class="nt">&lt;goal&gt;</span>copy-dependencies<span class="nt">&lt;/goal&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/goals&gt;</span>
</span><span class='line'>          <span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>              <span class="nt">&lt;outputDirectory&gt;</span>lib<span class="nt">&lt;/outputDirectory&gt;</span>
</span><span class='line'>              <span class="nt">&lt;excludeTransitive&gt;</span>false<span class="nt">&lt;/excludeTransitive&gt;</span>
</span><span class='line'>              <span class="nt">&lt;stripVersion&gt;</span>true<span class="nt">&lt;/stripVersion&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/configuration&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/execution&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/executions&gt;</span>
</span><span class='line'><span class="nt">&lt;/plugin&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>到目前为止，已完成部署的自定义，在服务器上用svn checkout代码，执行mvn compile就OK了</p>

<h2>Jetty:run</h2>

<p>在本地测试，我一般用maven-jetty-plugin，上面改了很多路径，jetty:run已经跑不起了，下面是我的jetty配置。主要改了<code>&lt;webAppSourceDirectory&gt;web&lt;/webAppSourceDirectory&gt;</code> 和 <code>&lt;directory&gt;web/WEB-INF&lt;/directory&gt;</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>org.mortbay.jetty<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>maven-jetty-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>6.1.26<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>      <span class="nt">&lt;webAppSourceDirectory&gt;</span>web<span class="nt">&lt;/webAppSourceDirectory&gt;</span>
</span><span class='line'>      <span class="nt">&lt;contextPath&gt;</span>/<span class="nt">&lt;/contextPath&gt;</span>
</span><span class='line'>      <span class="nt">&lt;scanIntervalSeconds&gt;</span>3<span class="nt">&lt;/scanIntervalSeconds&gt;</span>
</span><span class='line'>      <span class="nt">&lt;connectors&gt;</span>
</span><span class='line'>          <span class="nt">&lt;connector</span> <span class="na">implementation=</span><span class="s">&quot;org.mortbay.jetty.nio.SelectChannelConnector&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              <span class="nt">&lt;port&gt;</span>80<span class="nt">&lt;/port&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/connector&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/connectors&gt;</span>
</span><span class='line'>      <span class="nt">&lt;scanTargetPatterns&gt;</span>
</span><span class='line'>          <span class="nt">&lt;scanTargetPattern&gt;</span>
</span><span class='line'>              <span class="nt">&lt;directory&gt;</span>web/WEB-INF<span class="nt">&lt;/directory&gt;</span>
</span><span class='line'>              <span class="nt">&lt;excludes&gt;</span>
</span><span class='line'>                  <span class="nt">&lt;exclude&gt;</span>**/*.jsp<span class="nt">&lt;/exclude&gt;</span>
</span><span class='line'>              <span class="nt">&lt;/excludes&gt;</span>
</span><span class='line'>              <span class="nt">&lt;includes&gt;</span>
</span><span class='line'>                  <span class="nt">&lt;include&gt;</span>**/*.properties<span class="nt">&lt;/include&gt;</span>
</span><span class='line'>                  <span class="nt">&lt;include&gt;</span>**/*.xml<span class="nt">&lt;/include&gt;</span>
</span><span class='line'>              <span class="nt">&lt;/includes&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/scanTargetPattern&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/scanTargetPatterns&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/configuration&gt;</span>
</span><span class='line'><span class="nt">&lt;/plugin&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>要让本地测试环境正常运行起来，还要把之前的dependency注释掉，将类盒资源输出还原成，如下:
<code>&lt;outputDirectory&gt;target/classes&lt;/outputDirectory&gt;</code>
这下应该能跑起来了。</p>

<h2>maven编码</h2>

<p>maven2 方式:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>org.apache.maven.plugins<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>maven-compiler-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>2.3.2<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>      <span class="nt">&lt;source&gt;</span>1.6<span class="nt">&lt;/source&gt;</span>
</span><span class='line'>      <span class="nt">&lt;target&gt;</span>1.6<span class="nt">&lt;/target&gt;</span>
</span><span class='line'>      <span class="nt">&lt;encoding&gt;</span>GBK<span class="nt">&lt;/encoding&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/configuration&gt;</span>
</span><span class='line'><span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'><span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>org.apache.maven.plugins<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>maven-resources-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>2.6<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>      <span class="nt">&lt;encoding&gt;</span>GBK<span class="nt">&lt;/encoding&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/configuration&gt;</span>
</span><span class='line'><span class="nt">&lt;/plugin&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>maven3 方式:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;properties&gt;</span>
</span><span class='line'>  <span class="nt">&lt;project.build.sourceEncoding&gt;</span>GBK<span class="nt">&lt;/project.build.sourceEncoding&gt;</span>
</span><span class='line'>  <span class="nt">&lt;project.reporting.outputEncoding&gt;</span>GBK<span class="nt">&lt;/project.reporting.outputEncoding&gt;</span>
</span><span class='line'><span class="nt">&lt;/properties&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>一般都指定一下：window下不指定编码也不会乱码，但在Linux环境下，maven默认是UTF-8编译（可以改变maven默认编码，不建议），改变编码后没忘了clean一下。</p>
]]></content>
  </entry>
  
</feed>
